#pragma checksum "/Users/dan/Google Drive/School/CCSU/School - code/cs510/Assessment/CCSU-Assessment/Web/Views/Home/Requirements.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8315929f44849ec0ce3c349227ff077325f873d1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Requirements), @"mvc.1.0.view", @"/Views/Home/Requirements.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/dan/Google Drive/School/CCSU/School - code/cs510/Assessment/CCSU-Assessment/Web/Views/_ViewImports.cshtml"
using Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/dan/Google Drive/School/CCSU/School - code/cs510/Assessment/CCSU-Assessment/Web/Views/_ViewImports.cshtml"
using Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8315929f44849ec0ce3c349227ff077325f873d1", @"/Views/Home/Requirements.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"74b0619e1a302f0598271da1847e697c39d57b88", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Requirements : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"

<div class=""row"">
    <div class=""col-md"">
        <p class=""lead"">Component 1 -- Team ???</p>
        <p>This component implements that functionality related to uploading metadata into the system by the administrator.</p>
        <ol>
            <li>A CSV file containing the following course section metadata will be uploaded to the system:</li>
            <ul>
                <li>Course section CRN (for example, 41850)</li>
                <li>Faculty ID (for example, 12345)</li>
                <li>The system will parse the CSV file and verify that the data is consistent both internally and with any other data already in the system. In case of any errors, a detailed log will be displayed. Otherwise, all data from the CSV will be added to the database.</li>
            </ul>
            <li>A CSV file containing the following Rubric metadata will be uploaded to the system:</li>
            <ul>
                <li>Rubric ID </li>
                <li>Rubric (5x5 table)</li>
                <li>The system ");
            WriteLiteral(@"will parse the CSV file and verify that the data is consistent both internally and with any other data already in the system. In case of any errors, a detailed log will be displayed. Otherwise, all data from the CSV will be added to the database.</li>
            </ul>
            <li>A CSV file containing the following faculty metadata will be uploaded to the system:</li>
            <ul>
                <li>Faculty ID (for example, 12345)</li>
                <li>Rubric ID </li>
                <li>The system will parse the CSV file and verify that the data is consistent both internally and with any other data already in the system. In case of any errors, a detailed log will be displayed. Otherwise, all data from the CSV will be added to the database.</li>
            </ul>
            <li>The system will be able to display all information currently stored in the database in a user-friendly format. At least two separate reports will be needed:</li>
            <ul>
                <li>A list of all course s");
            WriteLiteral(@"ections and faculty assigned to each, and</li>
                <li>A list of all faculty and rubrics assigned to them.</li>
            </ul>
        </ol>
    </div>

    <div class=""col-md"">
        <p class=""lead"">Component 2 -- Team Grad</p>
        <p>This component implements that functionality related to uploading artifacts into the system by the administrator. The database of system will be bootstrapped with information about the term IDs, course and section IDs. </p>
        <ol>
            <li>A CSV file containing the following artifact metadata will be uploaded to the system:</li>
            <ul>
                <li>Faculty ID (for example, 12345)</li>
                <li>Course section CRN (for example, 41850)</li>
                <li>Unique File Name</li>
                <li>The system will parse the CSV file and verify that the data is consistent both internally and with any other data already in the system. In case of any errors, a detailed log will be displayed. Otherwise, all data from the");
            WriteLiteral(@" CSV will be added to the database.</li>
            </ul>
            <li>A ZIP file containing a number of PDF files will be uploaded to the system. The system will unpack the ZIP and attempt to match all PDF file names to those whose metadata is currently in the system. Each PDF file name must match exactly one previously uploaded metadata, i.e:</li>
            <ul>
                <li>There cannot be more than one PDF file that matches a given metadata record;</li>
                <li>No PDF file can match more than one metadata record.</li>
                <li>If no errors or inconsistencies are found, the uploaded PDF files will be stored in the system.</li>
            </ul>
            <li>The system will be able to display all information currently stored in the database in a user-friendly format. A report showing all artifact metadata along with links to currently available artifacts.</li>
        </ol>
    </div>
</div>

<div class=""row"">
    <div class=""col-md"">
        <p>To view code, visit <a ");
            WriteLiteral("href=\"https://github.com/DAndreChampagne/CCSU-Assessment\">https://github.com/DAndreChampagne/CCSU-Assessment</a>. <i>Please note this is a private repository. You\'ll need to request access.</i></i></p>\n    </div>\n</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
